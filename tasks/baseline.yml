---

- name: ensure tasks run only on selected os releases
  block:

    - name: deploy essential configuration
      ansible.builtin.include_tasks:
        file: essential.yml

    - name: deploy cockpit
      ansible.builtin.include_role:
        name: remote_management
        tasks_from: cockpit_deploy.yml

    - name: deploy chrony
      ansible.builtin.include_role:
        name: time_synchronization
        tasks_from: chrony_deploy.yml

    - name: deploy fastfetch
      ansible.builtin.include_role:
        name: system_information
        tasks_from: fastfetch_deploy.yml

    - name: "disable services {{ disabled_services }}"
      ansible.builtin.command:
        cmd: "systemctl disable --now {{ disabled_services | join(' ') }}"
      register: services_disabled
      failed_when:
        - services_disabled is failed
        - "'does not exist' not in services_disabled.stderr"
        - "'not loaded' not in services_disabled.stderr"

    - name: display disabled services
      ansible.builtin.debug:
        var: services_disabled
        verbosity: 1

    - name: "enable services {{ enabled_services }}"
      ansible.builtin.command:
        cmd: "systemctl enable --now {{ enabled_services | join(' ') }}"
      register: services_enabled
      failed_when:
        - services_enabled is failed
        - "'does not exist' not in services_enabled.stderr"

    - name: display enabled services
      ansible.builtin.debug:
        var: services_enabled
        verbosity: 1

    - name: set hostname
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}"
      when: fqdn_hostname

    - name: set hostname
      ansible.builtin.hostname:
        name: "{{ inventory_hostname_short }}"
      when: not fqdn_hostname

    - name: get hostname
      ansible.builtin.command:
        cmd: hostname
      changed_when: false
      register: node_hostname

    - name: generate fancy hostname
      ansible.builtin.command:
        cmd: figlet -w 256 -f small "{{ node_hostname.stdout }}"
      changed_when: false
      delegate_to: localhost
      failed_when:
        - figlet_hostname is failed
        - "'No such file or directory' not in cmd_figlet_hostname.msg"
      register: figlet_hostname

    - name: display figlet result
      ansible.builtin.debug:
        var: figlet_hostname
        verbosity: 1

    - name: generate standard hostname
      ansible.builtin.set_fact:
        figlet_hostname:
          stdout: "{{ node_hostname.stdout }}"
      delegate_to: localhost
      when: figlet_hostname.stdout == ""

    - name: ensure /etc/motd.d exists
      ansible.builtin.file:
        path: /etc/motd.d
        state: directory
        owner: root
        group: root
        mode: "0755"

    - name: set hostname in /etc/motd.d/hostname
      ansible.builtin.copy:
        content: "{{ figlet_hostname.stdout }}"
        dest: /etc/motd.d/hostname
        owner: root
        group: root
        mode: "0644"

    - name: ensure /etc/issue.d exists
      ansible.builtin.file:
        path: /etc/issue.d
        state: directory
        owner: root
        group: root
        mode: "0755"

    - name: set hostname in /etc/issue.d/hostname.issue
      ansible.builtin.copy:
        content: "{{ figlet_hostname.stdout }}"
        dest: /etc/issue.d/hostname.issue
        owner: root
        group: root
        mode: "0644"

    - name: deploy ssh customizations
      ansible.builtin.template:
        src: 99-ssh_custom.conf.j2
        dest: /etc/ssh/ssh_config.d/99-ssh_custom.conf
        owner: root
        group: root
        mode: "0644"

  when: ansible_distribution == "Fedora"

...
